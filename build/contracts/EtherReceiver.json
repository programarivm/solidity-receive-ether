{
  "contractName": "EtherReceiver",
  "abi": [
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "greeting",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/standard/projects/solidity-receive-ether/contracts/EtherReceiver.sol\":\"EtherReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/standard/projects/solidity-receive-ether/contracts/EtherReceiver.sol\":{\"keccak256\":\"0x17551a9a42f352e0c44606ba5bcce7de9688938b1455d3786a18e1a7ceb8667e\",\"urls\":[\"bzz-raw://0b36e0ac6db8e63d35630310976507f75c7b25bb7d0af5a5581d84b701f9a6b9\",\"dweb:/ipfs/QmNNpLfX7WrHai76ahu6Wxe8hFvSTS4Eim5i4cEfKZUCkq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610160806100206000396000f3fe6080604052600436106100295760003560e01c806312065fe01461002b578063ef690cc014610056575b005b34801561003757600080fd5b506100406100e6565b6040518082815260200191505060405180910390f35b34801561006257600080fd5b5061006b6100ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ab578082015181840152602081019050610090565b50505050905090810190601f1680156100d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600047905090565b60606040518060400160405280601e81526020017f48656c6c6f2c204920616d20616e20657468657220726563656976657221000081525090509056fea265627a7a723158204cf255a098e1ec9a0a358ea78c97e081f093b6ea155d3b06aad374c8264341ab64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c806312065fe01461002b578063ef690cc014610056575b005b34801561003757600080fd5b506100406100e6565b6040518082815260200191505060405180910390f35b34801561006257600080fd5b5061006b6100ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ab578082015181840152602081019050610090565b50505050905090810190601f1680156100d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600047905090565b60606040518060400160405280601e81526020017f48656c6c6f2c204920616d20616e20657468657220726563656976657221000081525090509056fea265627a7a723158204cf255a098e1ec9a0a358ea78c97e081f093b6ea155d3b06aad374c8264341ab64736f6c63430005100032",
  "sourceMap": "58:262:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58:262:0;;;;;;;",
  "deployedSourceMap": "58:262:0:-;;;;;;;;;;;;;;;;;;;;;;;;120:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;120:88:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;212:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;212:106:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;212:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;120:88;163:4;182:21;175:28;;120:88;:::o;212:106::-;253:13;274:39;;;;;;;;;;;;;;;;;;;212:106;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.5.16;\n\ncontract EtherReceiver {\n  function () payable external {}\n\n  function getBalance() public view returns (uint) {\n    return address(this).balance;\n  }\n\n  function greeting() public pure returns (string memory) {\n    return \"Hello, I am an ether receiver!\";\n  }\n}\n",
  "sourcePath": "/home/standard/projects/solidity-receive-ether/contracts/EtherReceiver.sol",
  "ast": {
    "absolutePath": "/home/standard/projects/solidity-receive-ether/contracts/EtherReceiver.sol",
    "exportedSymbols": {
      "EtherReceiver": [
        25
      ]
    },
    "id": 26,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 25,
        "linearizedBaseContracts": [
          25
        ],
        "name": "EtherReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4,
              "nodeType": "Block",
              "src": "114:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 5,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "94:2:0"
            },
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:0:0"
            },
            "scope": 25,
            "src": "85:31:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "169:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "190:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EtherReceiver_$25",
                            "typeString": "contract EtherReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EtherReceiver_$25",
                            "typeString": "contract EtherReceiver"
                          }
                        ],
                        "id": 10,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "182:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "182:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "182:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9,
                  "id": 14,
                  "nodeType": "Return",
                  "src": "175:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 16,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "139:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "163:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "162:6:0"
            },
            "scope": 25,
            "src": "120:88:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "268:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "48656c6c6f2c204920616d20616e20657468657220726563656976657221",
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "281:32:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2f650576c26d5a2e5769778a0f52bfec1c28a5be440b42c06092acaf0e35e869",
                      "typeString": "literal_string \"Hello, I am an ether receiver!\""
                    },
                    "value": "Hello, I am an ether receiver!"
                  },
                  "functionReturnParameters": 20,
                  "id": 22,
                  "nodeType": "Return",
                  "src": "274:39:0"
                }
              ]
            },
            "documentation": null,
            "id": 24,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "greeting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "253:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "252:15:0"
            },
            "scope": 25,
            "src": "212:106:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 26,
        "src": "58:262:0"
      }
    ],
    "src": "33:288:0"
  },
  "legacyAST": {
    "absolutePath": "/home/standard/projects/solidity-receive-ether/contracts/EtherReceiver.sol",
    "exportedSymbols": {
      "EtherReceiver": [
        25
      ]
    },
    "id": 26,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 25,
        "linearizedBaseContracts": [
          25
        ],
        "name": "EtherReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4,
              "nodeType": "Block",
              "src": "114:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 5,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "94:2:0"
            },
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:0:0"
            },
            "scope": 25,
            "src": "85:31:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "169:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "190:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EtherReceiver_$25",
                            "typeString": "contract EtherReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EtherReceiver_$25",
                            "typeString": "contract EtherReceiver"
                          }
                        ],
                        "id": 10,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "182:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "182:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "182:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9,
                  "id": 14,
                  "nodeType": "Return",
                  "src": "175:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 16,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "139:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "163:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "162:6:0"
            },
            "scope": 25,
            "src": "120:88:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "268:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "48656c6c6f2c204920616d20616e20657468657220726563656976657221",
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "281:32:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2f650576c26d5a2e5769778a0f52bfec1c28a5be440b42c06092acaf0e35e869",
                      "typeString": "literal_string \"Hello, I am an ether receiver!\""
                    },
                    "value": "Hello, I am an ether receiver!"
                  },
                  "functionReturnParameters": 20,
                  "id": 22,
                  "nodeType": "Return",
                  "src": "274:39:0"
                }
              ]
            },
            "documentation": null,
            "id": 24,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "greeting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "253:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "252:15:0"
            },
            "scope": 25,
            "src": "212:106:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 26,
        "src": "58:262:0"
      }
    ],
    "src": "33:288:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xdCe7BFd5CebcCA444B43946861E9a42005Fa96CE",
      "transactionHash": "0x96e7dcd63f5f67e39c1b744e8aafee86d00c63c9c152ec7f638474d4a6c22a1b"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-10-25T14:09:13.986Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}